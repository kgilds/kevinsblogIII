{
  "hash": "3a99246eea038beca6ee885ac6738371",
  "result": {
    "markdown": "---\ntitle: Shaking up Mental Models\nauthor: 'Kevin '\ndate: '2021-09-14'\nslug: []\ncategories:\n  - R\ntags:\n  - dplyr\n  - select\n  - pandas\n  - kaggle\n  - qualtrics\n---\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Attaching packages â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse 1.3.2 â”€â”€\nâœ” ggplot2 3.3.6     âœ” purrr   0.3.4\nâœ” tibble  3.1.8     âœ” dplyr   1.0.9\nâœ” tidyr   1.2.0     âœ” stringr 1.4.0\nâœ” readr   2.1.2     âœ” forcats 0.5.1\nâ”€â”€ Conflicts â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ tidyverse_conflicts() â”€â”€\nâœ– dplyr::filter() masks stats::filter()\nâœ– dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n> Once you see it; you can't unsee it.ðŸ¤”\n\nOne benefit of learning a new framework is that it gives you the opportunity to compare and contrast with an established mental model.\n\nI have been taking a [Pandas Course](https://www.kaggle.com/learn/pandas) from Kaggle and the lesson in Pandas involved establishing new variables in order to extract information from the data frame.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nindices = [0, 1, 10, 100]\nvar = ['country', 'province', 'region_1', 'region_2']\ndf = reviews.loc[indices, var]\n```\n:::\n\n\nThis seemed like a pain in order to select certain rows and columns, but it did open my perspective to a challenge I was having.\n\nI have been working on reading data from a Qualtrics survey and there are nearly 147 columns and only about 117 are needed. (Long story on templated survey tools). To parse the data frame down, I had been using indexes for selections. Using an index is okay but frustrating as you are testing because the index selection breaks when there is a change to the survey. It was also a pain to write out all those terrible column names. The python script above made me think to create a vector to reference in a select statement.\n\n> Is this possible--yes it is, and now I seem to see it everywhere.\n\nBelow is a minimal example with the 'mtcars' data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremove <- mtcars %>%\n  dplyr::select(drat, wt, qsec)\n\nremove <- names(remove) #create a vector with the names of the columns you eventually want to exclude\n\n\nnew_mtcars <- mtcars %>%\n  dplyr::select(-all_of(remove))  #within the select statement us the helper 'all_of' with the - operator to deselect the vector of interest. \n\n\nnew_mtcars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp  hp vs am gear carb\nMazda RX4           21.0   6 160.0 110  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110  0  1    4    4\nDatsun 710          22.8   4 108.0  93  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175  0  0    3    2\nValiant             18.1   6 225.0 105  1  0    3    1\nDuster 360          14.3   8 360.0 245  0  0    3    4\nMerc 240D           24.4   4 146.7  62  1  0    4    2\nMerc 230            22.8   4 140.8  95  1  0    4    2\nMerc 280            19.2   6 167.6 123  1  0    4    4\nMerc 280C           17.8   6 167.6 123  1  0    4    4\nMerc 450SE          16.4   8 275.8 180  0  0    3    3\nMerc 450SL          17.3   8 275.8 180  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205  0  0    3    4\nLincoln Continental 10.4   8 460.0 215  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230  0  0    3    4\nFiat 128            32.4   4  78.7  66  1  1    4    1\nHonda Civic         30.4   4  75.7  52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65  1  1    4    1\nToyota Corona       21.5   4 120.1  97  1  0    3    1\nDodge Challenger    15.5   8 318.0 150  0  0    3    2\nAMC Javelin         15.2   8 304.0 150  0  0    3    2\nCamaro Z28          13.3   8 350.0 245  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175  0  0    3    2\nFiat X1-9           27.3   4  79.0  66  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91  0  1    5    2\nLotus Europa        30.4   4  95.1 113  1  1    5    2\nFord Pantera L      15.8   8 351.0 264  0  1    5    4\nFerrari Dino        19.7   6 145.0 175  0  1    5    6\nMaserati Bora       15.0   8 301.0 335  0  1    5    8\nVolvo 142E          21.4   4 121.0 109  1  1    4    2\n```\n:::\n:::\n\n\n### Conclusion\n\nLearning python helped me shake up my mental model and apply it to my R workflow.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}