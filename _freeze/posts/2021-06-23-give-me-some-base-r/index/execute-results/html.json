{
  "hash": "1aef0052178d2467d5ea90eae7859dcf",
  "result": {
    "markdown": "---\ntitle: Give me some Base R\nauthor: 'Kevin '\ndate: '2021-06-23'\nslug: []\ncategories:\n  - R\ntags:\n  - \"base\"\n  - \"dplyr\"\n---\n\n\n# Introduction\n\n\n::: {.cell}\n\n:::\n\n\n> Yikes, I need to subset with base R ðŸ˜…\n\nI blog to help me remember things for future me so here we go. ðŸ¤ \n\nRarely are we presented with a raw data that is ready for analysis. See this [article](https://en.wikipedia.org/wiki/Data_wrangling) regarding data wrangling. This post will demonstrate techniques for subseting with the tidyverse and base R.\n\nHere is an example with the tidyverse using the mtcars dataset.\n\nWith [`dplyr`](https://dplyr.tidyverse.org/) the emphasis is on verbs ie., `select` to boss the computer and select the columns of interest.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n```\n:::\n\n```{.r .cell-code}\nmtcars %>% dplyr::select(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp\nMazda RX4           21.0   6 160.0\nMazda RX4 Wag       21.0   6 160.0\nDatsun 710          22.8   4 108.0\nHornet 4 Drive      21.4   6 258.0\nHornet Sportabout   18.7   8 360.0\nValiant             18.1   6 225.0\nDuster 360          14.3   8 360.0\nMerc 240D           24.4   4 146.7\nMerc 230            22.8   4 140.8\nMerc 280            19.2   6 167.6\nMerc 280C           17.8   6 167.6\nMerc 450SE          16.4   8 275.8\nMerc 450SL          17.3   8 275.8\nMerc 450SLC         15.2   8 275.8\nCadillac Fleetwood  10.4   8 472.0\nLincoln Continental 10.4   8 460.0\nChrysler Imperial   14.7   8 440.0\nFiat 128            32.4   4  78.7\nHonda Civic         30.4   4  75.7\nToyota Corolla      33.9   4  71.1\nToyota Corona       21.5   4 120.1\nDodge Challenger    15.5   8 318.0\nAMC Javelin         15.2   8 304.0\nCamaro Z28          13.3   8 350.0\nPontiac Firebird    19.2   8 400.0\nFiat X1-9           27.3   4  79.0\nPorsche 914-2       26.0   4 120.3\nLotus Europa        30.4   4  95.1\nFord Pantera L      15.8   8 351.0\nFerrari Dino        19.7   6 145.0\nMaserati Bora       15.0   8 301.0\nVolvo 142E          21.4   4 121.0\n```\n:::\n\n```{.r .cell-code}\nmtcars %>% dplyr::select(mpg, cyl, disp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp\nMazda RX4           21.0   6 160.0\nMazda RX4 Wag       21.0   6 160.0\nDatsun 710          22.8   4 108.0\nHornet 4 Drive      21.4   6 258.0\nHornet Sportabout   18.7   8 360.0\nValiant             18.1   6 225.0\nDuster 360          14.3   8 360.0\nMerc 240D           24.4   4 146.7\nMerc 230            22.8   4 140.8\nMerc 280            19.2   6 167.6\nMerc 280C           17.8   6 167.6\nMerc 450SE          16.4   8 275.8\nMerc 450SL          17.3   8 275.8\nMerc 450SLC         15.2   8 275.8\nCadillac Fleetwood  10.4   8 472.0\nLincoln Continental 10.4   8 460.0\nChrysler Imperial   14.7   8 440.0\nFiat 128            32.4   4  78.7\nHonda Civic         30.4   4  75.7\nToyota Corolla      33.9   4  71.1\nToyota Corona       21.5   4 120.1\nDodge Challenger    15.5   8 318.0\nAMC Javelin         15.2   8 304.0\nCamaro Z28          13.3   8 350.0\nPontiac Firebird    19.2   8 400.0\nFiat X1-9           27.3   4  79.0\nPorsche 914-2       26.0   4 120.3\nLotus Europa        30.4   4  95.1\nFord Pantera L      15.8   8 351.0\nFerrari Dino        19.7   6 145.0\nMaserati Bora       15.0   8 301.0\nVolvo 142E          21.4   4 121.0\n```\n:::\n:::\n\n\n### Some base R\n\nBase R: Subset the first 3 columns\n\nSometimes, I like to index the column selections.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars[, c(1:3)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp\nMazda RX4           21.0   6 160.0\nMazda RX4 Wag       21.0   6 160.0\nDatsun 710          22.8   4 108.0\nHornet 4 Drive      21.4   6 258.0\nHornet Sportabout   18.7   8 360.0\nValiant             18.1   6 225.0\nDuster 360          14.3   8 360.0\nMerc 240D           24.4   4 146.7\nMerc 230            22.8   4 140.8\nMerc 280            19.2   6 167.6\nMerc 280C           17.8   6 167.6\nMerc 450SE          16.4   8 275.8\nMerc 450SL          17.3   8 275.8\nMerc 450SLC         15.2   8 275.8\nCadillac Fleetwood  10.4   8 472.0\nLincoln Continental 10.4   8 460.0\nChrysler Imperial   14.7   8 440.0\nFiat 128            32.4   4  78.7\nHonda Civic         30.4   4  75.7\nToyota Corolla      33.9   4  71.1\nToyota Corona       21.5   4 120.1\nDodge Challenger    15.5   8 318.0\nAMC Javelin         15.2   8 304.0\nCamaro Z28          13.3   8 350.0\nPontiac Firebird    19.2   8 400.0\nFiat X1-9           27.3   4  79.0\nPorsche 914-2       26.0   4 120.3\nLotus Europa        30.4   4  95.1\nFord Pantera L      15.8   8 351.0\nFerrari Dino        19.7   6 145.0\nMaserati Bora       15.0   8 301.0\nVolvo 142E          21.4   4 121.0\n```\n:::\n:::\n\n\nKey points:\n\n-   Need to use brackets with the date frame up against the first bracket\n\n-   Need the `c` function to grab multiple columns.\n\n-   The `:` lets you select column 1 through 3\n\nSometimes, you need to name your columns---here it is important to quote the column names. Notice with dplyr you do not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars[, c(\"mpg\", \"cyl\", \"disp\")]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp\nMazda RX4           21.0   6 160.0\nMazda RX4 Wag       21.0   6 160.0\nDatsun 710          22.8   4 108.0\nHornet 4 Drive      21.4   6 258.0\nHornet Sportabout   18.7   8 360.0\nValiant             18.1   6 225.0\nDuster 360          14.3   8 360.0\nMerc 240D           24.4   4 146.7\nMerc 230            22.8   4 140.8\nMerc 280            19.2   6 167.6\nMerc 280C           17.8   6 167.6\nMerc 450SE          16.4   8 275.8\nMerc 450SL          17.3   8 275.8\nMerc 450SLC         15.2   8 275.8\nCadillac Fleetwood  10.4   8 472.0\nLincoln Continental 10.4   8 460.0\nChrysler Imperial   14.7   8 440.0\nFiat 128            32.4   4  78.7\nHonda Civic         30.4   4  75.7\nToyota Corolla      33.9   4  71.1\nToyota Corona       21.5   4 120.1\nDodge Challenger    15.5   8 318.0\nAMC Javelin         15.2   8 304.0\nCamaro Z28          13.3   8 350.0\nPontiac Firebird    19.2   8 400.0\nFiat X1-9           27.3   4  79.0\nPorsche 914-2       26.0   4 120.3\nLotus Europa        30.4   4  95.1\nFord Pantera L      15.8   8 351.0\nFerrari Dino        19.7   6 145.0\nMaserati Bora       15.0   8 301.0\nVolvo 142E          21.4   4 121.0\n```\n:::\n:::\n\n\n## What if we want to write a function?\n\nBelow are examples with both dplyr and base R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_select <- function(df, col){\n\tdf %>%\n\t\tdplyr::select({{col}}, cyl, disp)\n\t\t\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_select(mtcars, mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp\nMazda RX4           21.0   6 160.0\nMazda RX4 Wag       21.0   6 160.0\nDatsun 710          22.8   4 108.0\nHornet 4 Drive      21.4   6 258.0\nHornet Sportabout   18.7   8 360.0\nValiant             18.1   6 225.0\nDuster 360          14.3   8 360.0\nMerc 240D           24.4   4 146.7\nMerc 230            22.8   4 140.8\nMerc 280            19.2   6 167.6\nMerc 280C           17.8   6 167.6\nMerc 450SE          16.4   8 275.8\nMerc 450SL          17.3   8 275.8\nMerc 450SLC         15.2   8 275.8\nCadillac Fleetwood  10.4   8 472.0\nLincoln Continental 10.4   8 460.0\nChrysler Imperial   14.7   8 440.0\nFiat 128            32.4   4  78.7\nHonda Civic         30.4   4  75.7\nToyota Corolla      33.9   4  71.1\nToyota Corona       21.5   4 120.1\nDodge Challenger    15.5   8 318.0\nAMC Javelin         15.2   8 304.0\nCamaro Z28          13.3   8 350.0\nPontiac Firebird    19.2   8 400.0\nFiat X1-9           27.3   4  79.0\nPorsche 914-2       26.0   4 120.3\nLotus Europa        30.4   4  95.1\nFord Pantera L      15.8   8 351.0\nFerrari Dino        19.7   6 145.0\nMaserati Bora       15.0   8 301.0\nVolvo 142E          21.4   4 121.0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_select <- function(df, col){\n\tdf1 <- df[, c (col, \"cyl\", \"disp\")] #col is variable you pick cyl and disp is hard coded in\n\tdf1\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_test <- base_select(mtcars, \"mpg\")\n\nbase_test\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     mpg cyl  disp\nMazda RX4           21.0   6 160.0\nMazda RX4 Wag       21.0   6 160.0\nDatsun 710          22.8   4 108.0\nHornet 4 Drive      21.4   6 258.0\nHornet Sportabout   18.7   8 360.0\nValiant             18.1   6 225.0\nDuster 360          14.3   8 360.0\nMerc 240D           24.4   4 146.7\nMerc 230            22.8   4 140.8\nMerc 280            19.2   6 167.6\nMerc 280C           17.8   6 167.6\nMerc 450SE          16.4   8 275.8\nMerc 450SL          17.3   8 275.8\nMerc 450SLC         15.2   8 275.8\nCadillac Fleetwood  10.4   8 472.0\nLincoln Continental 10.4   8 460.0\nChrysler Imperial   14.7   8 440.0\nFiat 128            32.4   4  78.7\nHonda Civic         30.4   4  75.7\nToyota Corolla      33.9   4  71.1\nToyota Corona       21.5   4 120.1\nDodge Challenger    15.5   8 318.0\nAMC Javelin         15.2   8 304.0\nCamaro Z28          13.3   8 350.0\nPontiac Firebird    19.2   8 400.0\nFiat X1-9           27.3   4  79.0\nPorsche 914-2       26.0   4 120.3\nLotus Europa        30.4   4  95.1\nFord Pantera L      15.8   8 351.0\nFerrari Dino        19.7   6 145.0\nMaserati Bora       15.0   8 301.0\nVolvo 142E          21.4   4 121.0\n```\n:::\n:::\n\n\n# Conclusion\n\nHere is a [good resource](https://www.r-bloggers.com/2020/08/how-to-subset-a-data-frame-column-data-in-r/) for additional subseting needs. I hope this helps.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}